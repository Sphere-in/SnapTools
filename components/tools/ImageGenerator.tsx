"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { ImagePlus, RefreshCw, Download } from "lucide-react"
import { toast } from "sonner"

export function ImageGenerator() {
  const [prompt, setPrompt] = useState("")
  const [imageUrl, setImageUrl] = useState("")
  const [loading, setLoading] = useState(false)

  const generateImage = async () => {
    if (!prompt.trim()) {
      toast.error("Please enter a prompt.")
      return
    }

    setLoading(true)
    setImageUrl("")

    try {
      const response = await fetch("/api/generate-image", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ prompt }),
      })

      if (!response.ok) throw new Error("Image generation failed")

      const blob = await response.blob()
      const url = URL.createObjectURL(blob)
      setImageUrl(url)
      toast.success("Image generated!")
    } catch (err) {
      toast.error("Failed to generate image")
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Image Prompt</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <Label>Enter your prompt</Label>
              <Input
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                placeholder="e.g. Astronaut riding a horse"
              />
              <Button onClick={generateImage} className="w-full" disabled={loading}>
                {loading ? (
                  <>
                    <RefreshCw className="h-4 w-4 mr-2 animate-spin" />
                    Generating...
                  </>
                ) : (
                  "Generate Image"
                )}
              </Button>
            </CardContent>
          </Card>
        </div>

        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Generated Image</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {imageUrl ? (
                <div className="space-y-4">
                  <img
                    src={imageUrl}
                    alt="Generated by AI"
                    className="rounded-xl border shadow w-full"
                  />
                  <a
                    href={imageUrl}
                    download="generated-image.png"
                    className="inline-flex items-center gap-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-xl transition"
                  >
                    <Download className="w-4 h-4" />
                    Download Image
                  </a>
                </div>
              ) : (
                <div className="flex flex-col items-center justify-center text-sm text-muted-foreground h-64 border rounded-xl">
                  <ImagePlus className="h-8 w-8 mb-2" />
                  No image generated yet.
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

